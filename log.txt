def n_minus_x(x, **kwargs):
	return n_minus.__wrapped__(x, n = globals()["spem_kwargs"]["n"], **kwargs)
{'n': 10}
def ws_x_n_minus_x(x, n_minus_x, **kwargs):
	return weighted_sum.__wrapped__(x, n_minus_x, weights = globals()["spem_kwargs"]["weights"], **kwargs)
{'weights': [1, 2]}
def n_minus_x(x, **kwargs):
	return n_minus.__wrapped__(x, n = locals()["spem_kwargs"]["n"], **kwargs)
{'n': 10}
def ws_x_n_minus_x(x, n_minus_x, **kwargs):
	return weighted_sum.__wrapped__(x, n_minus_x, weights = locals()["spem_kwargs"]["weights"], **kwargs)
{'weights': [1, 2]}
def n_minus_x(x, **kwargs):
	return n_minus.__wrapped__(x, n = n, **kwargs)
{'n': 10}
def ws_x_n_minus_x(x, n_minus_x, **kwargs):
	return weighted_sum.__wrapped__(x, n_minus_x, weights = weights, **kwargs)
{'weights': [1, 2]}
def n_minus_x(x, **kwargs):
	return n_minus.__wrapped__(x, n = n, **kwargs)
{'n': 10}
def ws_x_n_minus_x(x, n_minus_x, **kwargs):
	return weighted_sum.__wrapped__(x, n_minus_x, weights = weights, **kwargs)
{'weights': [1, 2]}
def n_minus_x(x, **kwargs):
	return n_minus.__wrapped__(x, n = n, **kwargs)
{'n': 10}
def ws_x_n_minus_x(x, n_minus_x, **kwargs):
	return weighted_sum.__wrapped__(x, n_minus_x, weights = weights, **kwargs)
{'weights': [1, 2]}
def n_minus_x(x, **kwargs):
	return n_minus.__wrapped__(x, n = n, **kwargs)
{'n': 10}
def ws_x_n_minus_x(x, n_minus_x, **kwargs):
	return weighted_sum.__wrapped__(x, n_minus_x, weights = weights, **kwargs)
{'weights': [1, 2]}
def n_minus_x(x, **kwargs):
	return n_minus.__wrapped__(x, n = n, **kwargs)
{'n': 10}
def ws_x_n_minus_x(x, n_minus_x, **kwargs):
	return weighted_sum.__wrapped__(x, n_minus_x, weights = weights, **kwargs)
{'weights': [1, 2]}
def n_minus_x(x, **kwargs):
	return n_minus.__wrapped__(x, n = n, **kwargs)
{'n': 10}
def ws_x_n_minus_x(x, n_minus_x, **kwargs):
	return weighted_sum.__wrapped__(x, n_minus_x, weights = weights, **kwargs)
{'weights': [1, 2]}
def n_minus_x(x, **kwargs):
	return n_minus.__wrapped__(x, n = n, **kwargs)
{'n': 10}
def ws_x_n_minus_x(x, n_minus_x, **kwargs):
	return weighted_sum.__wrapped__(x, n_minus_x, weights = weights, **kwargs)
{'weights': [1, 2]}
def n_minus_x(x, **kwargs):
	return n_minus.__wrapped__(x, n = n, **kwargs)
{'n': 10}
def ws_x_n_minus_x(x, n_minus_x, **kwargs):
	return weighted_sum.__wrapped__(x, n_minus_x, weights = weights, **kwargs)
{'weights': [1, 2]}
def n_minus_x(x, **kwargs):
	return n_minus.__wrapped__(x, n = n, **kwargs)
{'n': 10}
def ws_x_n_minus_x(x, n_minus_x, **kwargs):
	return weighted_sum.__wrapped__(x, n_minus_x, weights = weights, **kwargs)
{'weights': [1, 2]}
def n_minus_x(x, **kwargs):
	return n_minus.__wrapped__(x, n = n, **kwargs)
{'n': 10}
def ws_x_n_minus_x(x, n_minus_x, **kwargs):
	return weighted_sum.__wrapped__(x, n_minus_x, weights = weights, **kwargs)
{'weights': [1, 2]}
def n_minus_x(x, **kwargs):
	return n_minus.__wrapped__(x, n = n, **kwargs)
{'n': 10}
def ws_x_n_minus_x(x, n_minus_x, **kwargs):
	return weighted_sum.__wrapped__(x, n_minus_x, weights = weights, **kwargs)
{'weights': [1, 2]}
def n_minus_size(size, **kwargs):
	return n_minus.__wrapped__(size, n = n, **kwargs)
{'n': 20}
def n_minus_depth(depth, **kwargs):
	return n_minus.__wrapped__(depth, n = n, **kwargs)
{'n': 8}
def ws_imse_irmse_isae_n_minus_size_n_minus_depth(imse, irmse, isae, n_minus_size, n_minus_depth, **kwargs):
	return weighted_sum.__wrapped__(imse, irmse, isae, n_minus_size, n_minus_depth, weights = weights, **kwargs)
{'weights': array([1., 2., 3., 4., 5.], dtype=float32)}
def n_minus_x(x, **kwargs):
	return n_minus.__wrapped__(x, n = n, **kwargs)
{'n': 10}
def ws_x_n_minus_x(x, n_minus_x, **kwargs):
	return weighted_sum.__wrapped__(x, n_minus_x, weights = weights, **kwargs)
{'weights': [1, 2]}
def n_minus_size(size, **kwargs):
	return n_minus.__wrapped__(size, n = n, **kwargs)
{'n': 20}
def n_minus_depth(depth, **kwargs):
	return n_minus.__wrapped__(depth, n = n, **kwargs)
{'n': 8}
def ws_imse_irmse_isae_n_minus_size_n_minus_depth(imse, irmse, isae, n_minus_size, n_minus_depth, **kwargs):
	return weighted_sum.__wrapped__(imse, irmse, isae, n_minus_size, n_minus_depth, weights = weights, **kwargs)
{'weights': array([1., 2., 3., 4., 5.], dtype=float32)}
def n_minus_x(x, **kwargs):
	return n_minus.__wrapped__(x, n = n, **kwargs)
{'n': 10}
def ws_x_n_minus_x(x, n_minus_x, **kwargs):
	return weighted_sum.__wrapped__(x, n_minus_x, weights = weights, **kwargs)
{'weights': [1, 2]}
def n_minus_size(size, **kwargs):
	return n_minus.__wrapped__(size, n = n, **kwargs)
{'n': 20}
def n_minus_depth(depth, **kwargs):
	return n_minus.__wrapped__(depth, n = n, **kwargs)
{'n': 8}
def ws_imse_irmse_isae_n_minus_size_n_minus_depth(imse, irmse, isae, n_minus_size, n_minus_depth, **kwargs):
	return weighted_sum.__wrapped__(imse, irmse, isae, n_minus_size, n_minus_depth, weights = weights, **kwargs)
{'weights': array([1., 2., 3., 4., 5.], dtype=float32)}
def n_minus_x(x, **kwargs):
	return n_minus.__wrapped__(x, n = n, **kwargs)
{'n': 10}
def ws_x_n_minus_x(x, n_minus_x, **kwargs):
	return weighted_sum.__wrapped__(x, n_minus_x, weights = weights, **kwargs)
{'weights': [1, 2]}
def n_minus_size(size, **kwargs):
	return n_minus.__wrapped__(size, n = n, **kwargs)
{'n': 20}
def n_minus_depth(depth, **kwargs):
	return n_minus.__wrapped__(depth, n = n, **kwargs)
{'n': 8}
def ws_imse_irmse_isae_n_minus_size_n_minus_depth(imse, irmse, isae, n_minus_size, n_minus_depth, **kwargs):
	return weighted_sum.__wrapped__(imse, irmse, isae, n_minus_size, n_minus_depth, weights = weights, **kwargs)
{'weights': array([1., 2., 3., 4., 5.], dtype=float32)}
def n_minus_x(x, **kwargs):
	return n_minus.__wrapped__(x, n = n, **kwargs)
{'n': 10}
def ws_x_n_minus_x(x, n_minus_x, **kwargs):
	return weighted_sum.__wrapped__(x, n_minus_x, weights = weights, **kwargs)
{'weights': [1, 2]}
def n_minus_size(size, **kwargs):
	return n_minus.__wrapped__(size, n = n, **kwargs)
{'n': 20}
def n_minus_depth(depth, **kwargs):
	return n_minus.__wrapped__(depth, n = n, **kwargs)
{'n': 8}
def ws_imse_irmse_isae_n_minus_size_n_minus_depth(imse, irmse, isae, n_minus_size, n_minus_depth, **kwargs):
	return weighted_sum.__wrapped__(imse, irmse, isae, n_minus_size, n_minus_depth, weights = weights, **kwargs)
{'weights': array([1., 2., 3., 4., 5.], dtype=float32)}
def n_minus_x(x, **kwargs):
	return n_minus.__wrapped__(x, n = n, **kwargs)
{'n': 10}
def ws_x_n_minus_x(x, n_minus_x, **kwargs):
	return weighted_sum.__wrapped__(x, n_minus_x, weights = weights, **kwargs)
{'weights': [1, 2]}
def n_minus_size(size, **kwargs):
	return n_minus.__wrapped__(size, n = n, **kwargs)
{'n': 20}
def n_minus_depth(depth, **kwargs):
	return n_minus.__wrapped__(depth, n = n, **kwargs)
{'n': 8}
def ws_imse_irmse_isae_n_minus_size_n_minus_depth(imse, irmse, isae, n_minus_size, n_minus_depth, **kwargs):
	return weighted_sum.__wrapped__(imse, irmse, isae, n_minus_size, n_minus_depth, weights = weights, **kwargs)
{'weights': array([1., 2., 3., 4., 5.], dtype=float32)}
